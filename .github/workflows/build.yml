name: Build and Release

on:
  push:
    branches:
      - dev
      - beta

jobs:
  build-and-release-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install conan
          conan profile detect
          sudo apt-get update && sudo apt-get install -y cmake
      - name: Build
        run: |
          chmod +x build.sh
          ./build.sh
      - uses: actions/upload-artifact@v4
        with:
          name: todolist-linux
          path: todolist

  build-and-release-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install conan
          conan profile detect
      - name: Install vcpkg and SQLiteCpp
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg.exe integrate install
          .\vcpkg.exe install sqlitecpp fmt benchmark
      - name: Build
        run: .\build.bat
      - uses: actions/upload-artifact@v4
        with:
          name: todolist-windows
          path: ${{ github.workspace }}\build\Release\todolist.exe

  create-release:
    needs: [build-and-release-linux, build-and-release-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: todolist-linux
          path: todolist-linux
      - uses: actions/download-artifact@v4
        with:
          name: todolist-windows
          path: todolist-windows
      - name: Create tar files
        run: |
          tar -czvf todolist-linux.tar.gz -C todolist-linux .
          tar -czvf todolist-windows.tar.gz -C todolist-windows .
          
      - uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: "todolist-linux.tar.gz,todolist-windows.tar.gz"
          token: ${{ secrets.PAT_TOKEN }}
          name: Build v${{ github.run_number }}
          tag: v${{ github.run_number }}
          prerelease: true

  cleanup:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            todolist-linux
            todolist-windows
